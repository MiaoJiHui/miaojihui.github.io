<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MiaoJiHui</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://miaojihui.github.io/"/>
  <updated>2016-09-21T12:38:49.000Z</updated>
  <id>https://miaojihui.github.io/</id>
  
  <author>
    <name>Joseph Miao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac上一些开发必备神器</title>
    <link href="https://miaojihui.github.io/2016/09/18/mactools/"/>
    <id>https://miaojihui.github.io/2016/09/18/mactools/</id>
    <published>2016-09-18T15:12:31.000Z</published>
    <updated>2016-09-21T12:38:49.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;标题可能有些大，不过我会持续更新的…&quot;&gt;&lt;a href=&quot;#标题可能有些大，不过我会持续更新的…&quot; class=&quot;headerlink&quot; title=&quot;标题可能有些大，不过我会持续更新的…&quot;&gt;&lt;/a&gt;标题可能有些大，不过我会持续更新的…&lt;/h2&gt;&lt;h4 id=&quot;1-Alfred&quot;&gt;&lt;a href=&quot;#1-Alfred&quot; class=&quot;headerlink&quot; title=&quot;1. Alfred&quot;&gt;&lt;/a&gt;1. Alfred&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;查字典：&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/6f02a1d1740b6e15.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;自定义搜索：&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/cc373f14444034c4.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;br&gt;这里的gh是我自定义的keyword，需要自己去Feature-&amp;gt;WebSearch-&amp;gt;Add Custom Search里去添加,如下图所示：&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/b2ff14839ef1cae2.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/li&gt;
&lt;li&gt;锁屏&amp;amp;睡眠&amp;amp;关机etc.&lt;br&gt;分别敲入的是&lt;code&gt;lock&lt;/code&gt;, &lt;code&gt;sleep&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;直接敲命令，并进入terminal，这里的&lt;code&gt;$&lt;/code&gt;我另外设置过了，默认是&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/122693bf3a0f24fb.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/li&gt;
&lt;li&gt;查找文件或文件夹先键入一个空格，再打文件/夹名即可&lt;/li&gt;
&lt;li&gt;与Dash的强力结合，（dash是离线文档查看神器，后面还会再介绍）&lt;br&gt;&lt;img src=&quot;http://i2.buimg.com/567571/7980da5dcf131857.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/li&gt;
&lt;li&gt;还有很多功能另待挖掘…&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-Dash&quot;&gt;&lt;a href=&quot;#2-Dash&quot; class=&quot;headerlink&quot; title=&quot;2. Dash&quot;&gt;&lt;/a&gt;2. Dash&lt;/h4&gt;&lt;p&gt;dash是开发必备良品啊，无论在线或离线都能方便查询各文档，我觉得配合alfred使用最佳！&lt;br&gt;&lt;img src=&quot;http://7xrn7f.com1.z0.glb.clouddn.com/16-9-18/62590367.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-iTerm2&quot;&gt;&lt;a href=&quot;#3-iTerm2&quot; class=&quot;headerlink&quot; title=&quot;3. iTerm2&quot;&gt;&lt;/a&gt;3. iTerm2&lt;/h4&gt;&lt;p&gt;iterm2可以说是terminal的增强版，可以较为自由的diy比如修改颜色主题，查找文件高亮等.&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/74311666jw1f7y4ohdh4pj21f00oatdz.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;br&gt;颜色主题可以在这里找到自己喜欢的&lt;a href=&quot;https://github.com/mbadolato/iTerm2-Color-Schemes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTerm2-Color-Theme&lt;/a&gt;&lt;br&gt;,下载好之后，如上图，在Profiles中新建profile name之后，在Colors-&amp;gt;Color presets中点击import你选中的主题&lt;br&gt;这是我自己的iterm2主题Blazer，比较喜欢这种柔和的颜色搭配：&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/8238606fd1643009.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-Sublime-Text3&quot;&gt;&lt;a href=&quot;#4-Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;4. Sublime Text3&quot;&gt;&lt;/a&gt;4. Sublime Text3&lt;/h4&gt;&lt;p&gt;这个就不多描述啦，前端开发必备编辑器。&lt;br&gt;介绍个主题：&lt;a href=&quot;https://github.com/kkga/spacegray&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spacegrey&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/128d1ccfe19ca00c.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-MacDown&quot;&gt;&lt;a href=&quot;#5-MacDown&quot; class=&quot;headerlink&quot; title=&quot;5. MacDown&quot;&gt;&lt;/a&gt;5. MacDown&lt;/h4&gt;&lt;p&gt;markdown 编辑器，方便快捷。&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/c6de04a518769303.jpg&quot; alt=&quot;Alt description&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-SmartSvn&quot;&gt;&lt;a href=&quot;#5-SmartSvn&quot; class=&quot;headerlink&quot; title=&quot;5. SmartSvn&quot;&gt;&lt;/a&gt;5. SmartSvn&lt;/h4&gt;&lt;p&gt;之前一直用的是Versions，经常会卡死崩溃，每次只能强关再开，很是烦恼。最近公司正好配了台新的mac mini，看知乎上说 SmartSvn好用我就试了试，结果真心好，比Versions强大很多。&lt;br&gt;分别贴下两者的截图：&lt;br&gt;Version:&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/ec72ff48aa298ec9.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;SmartSVN:&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/fd7bc80e1c15e52a.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;总之：SmartSVN给出了文件对比，需提交的文件统一放到右边的面板中一目了然，界面也比较清爽。&lt;/p&gt;
&lt;h2 id=&quot;To-be-continued…&quot;&gt;&lt;a href=&quot;#To-be-continued…&quot; class=&quot;headerlink&quot; title=&quot;To be continued…&quot;&gt;&lt;/a&gt;To be continued…&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题可能有些大，不过我会持续更新的…&quot;&gt;&lt;a href=&quot;#标题可能有些大，不过我会持续更新的…&quot; class=&quot;headerlink&quot; title=&quot;标题可能有些大，不过我会持续更新的…&quot;&gt;&lt;/a&gt;标题可能有些大，不过我会持续更新的…&lt;/h2&gt;&lt;h4 id=&quot;1
    
    </summary>
    
    
      <category term="Alfred" scheme="https://miaojihui.github.io/tags/Alfred/"/>
    
      <category term="Dash" scheme="https://miaojihui.github.io/tags/Dash/"/>
    
      <category term="iTerm2" scheme="https://miaojihui.github.io/tags/iTerm2/"/>
    
      <category term="sublime" scheme="https://miaojihui.github.io/tags/sublime/"/>
    
      <category term="macdown" scheme="https://miaojihui.github.io/tags/macdown/"/>
    
      <category term="mac" scheme="https://miaojihui.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>git &amp; github</title>
    <link href="https://miaojihui.github.io/2016/09/03/git-github/"/>
    <id>https://miaojihui.github.io/2016/09/03/git-github/</id>
    <published>2016-09-03T13:11:09.000Z</published>
    <updated>2016-09-11T11:42:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;今天来记录一下自己学习git-amp-github的心得和体会&quot;&gt;&lt;a href=&quot;#今天来记录一下自己学习git-amp-github的心得和体会&quot; class=&quot;headerlink&quot; title=&quot;今天来记录一下自己学习git &amp;amp; github的心得和体会&quot;&gt;&lt;/a&gt;今天来记录一下自己学习git &amp;amp; github的心得和体会&lt;/h1&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;先贴上廖雪峰前辈的git教程，堪称行业经典，我就是看了他的教程之后也想自己写点总结出来。&quot;&gt;&lt;a href=&quot;#先贴上廖雪峰前辈的git教程，堪称行业经典，我就是看了他的教程之后也想自己写点总结出来。&quot; class=&quot;headerlink&quot; title=&quot;先贴上廖雪峰前辈的git教程，堪称行业经典，我就是看了他的教程之后也想自己写点总结出来。&quot;&gt;&lt;/a&gt;先贴上廖雪峰前辈的&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git教程&lt;/a&gt;，堪称行业经典，我就是看了他的教程之后也想自己写点总结出来。&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;git原来是linux之父linus花了两周时间开发出来的，怪不得那么强大。虽然此时的我也还没有完全领略到git的风采，但是通过这几个月对github的深入了解之后，还是能领回到不少git的魅力！可以这么说，github打开我对前端世界认识的大门，而git则为我指引了一条快速通往这个世界的道路。&lt;/p&gt;
&lt;p&gt;先声明下，所有git用法均是在mac环境下的terminal终端进行。好了，下面开始正式介绍：&lt;/p&gt;
&lt;h5 id=&quot;1-纯小白式&quot;&gt;&lt;a href=&quot;#1-纯小白式&quot; class=&quot;headerlink&quot; title=&quot;1.纯小白式&quot;&gt;&lt;/a&gt;1.纯小白式&lt;/h5&gt;&lt;p&gt;比如我们现在想把github中bootstrap项目下载到本地,先访问&lt;a href=&quot;https://github.com/twbs/bootstrap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/twbs/bootstrap&lt;/a&gt;，然后再clone，如下图：&lt;br&gt;&lt;img src=&quot;/imgs/git1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;切换到你想存放的目录，在终端上执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/twbs/bootstrap.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以在该目录看到bootstrap项目啦。不过这种方式是无法对原项目push任何修改。&lt;/p&gt;
&lt;h5 id=&quot;2-小白式&quot;&gt;&lt;a href=&quot;#2-小白式&quot; class=&quot;headerlink&quot; title=&quot;2.小白式&quot;&gt;&lt;/a&gt;2.小白式&lt;/h5&gt;&lt;p&gt;比如现在需要新建一个apph5的前端项目，我们先去github，点击右上角的+然后New repository新建一个名叫apph5的库。&lt;br&gt;建立好了之后，会生成一个https链接: &lt;a href=&quot;https://github.com/miaojihui/apph5.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/miaojihui/apph5.git&lt;/a&gt; 和一个ssh链接: git@github.com:MiaoJiHui/apph5.git。&lt;br&gt;现在clone到本地，或者新建一个apph5的文件夹都行，关键要把本地apph5文件夹和github远程库关联起来。&lt;br&gt;但在关联之前，我们必须先给github提供本机的ssh key，只有这样github才允许本地与github进行交互。&lt;br&gt;生成ssh key：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;youremail@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后连敲三次enter键，ssh key就生成好啦，到~/.ssh/id_rsa.pub中查看key就行了，可以用vim打开。&lt;br&gt;接着到&lt;a href=&quot;https://github.com/settings/keys&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/settings/keys&lt;/a&gt;,点击New SSH KEY，把key填进去就行了。此时可以在终端打 &lt;code&gt;ssh -T git@github.com&lt;/code&gt;，如果显示如下提示就说明大功告成啦：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi MiaoJiHui! You’ve successfully authenticated, but GitHub does not provide shell access.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接着此时，如果本地项目写好了，则要进行一系列git命令操作啦：&lt;br&gt;如果项目是新建的文件夹，则要进行git初始化&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就会在apph5目录生成一个.git的文件，通过该文件才可以进行git操作。&lt;br&gt;接着依次执行下面操作：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git add . &lt;span class=&quot;comment&quot;&gt;#         //把本地修改的文件添加到git暂存区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;first commit&quot;&lt;/span&gt;       //把暂存取中的文件提交到本地的git库，并附加提交注释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add origin  git@github.com:MiaoJiHui/apph5.git //添加远程github库的关联&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git push -u origin master //把本地源码库push到github，-u代表第一次推送master分支的所有内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ok,本地的文件都被push到github上了。&lt;/p&gt;
&lt;h5 id=&quot;3-日常简单开发&quot;&gt;&lt;a href=&quot;#3-日常简单开发&quot; class=&quot;headerlink&quot; title=&quot;3.日常简单开发&quot;&gt;&lt;/a&gt;3.日常简单开发&lt;/h5&gt;&lt;p&gt;以上都是针对一个人用一台电脑开发时的情况。现在来解决一个人用两台电脑同时开发的情形。&lt;/p&gt;
&lt;p&gt;把远程库中最新的代码fetch/pull到本地&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ fetch origin master		//获取最新分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; -p master..origin/master		//比较本地的master分支和origin/master分支的差别&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git merge origin/master		//合并&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git fetch origin master:tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git diff tmp &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git merge tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git pull origin master		//相当于git fetch 和 git merge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上三种做法其实都是等效的，但是推荐前面两种。&lt;/p&gt;
&lt;p&gt;好啦，结合&lt;code&gt;git commit&lt;/code&gt;和&lt;code&gt;git fetch&lt;/code&gt;,&lt;code&gt;git merge&lt;/code&gt;这三个命令就可以基本满足日常简单开发需求了。&lt;/p&gt;
&lt;h5 id=&quot;4-进阶-多人开发&quot;&gt;&lt;a href=&quot;#4-进阶-多人开发&quot; class=&quot;headerlink&quot; title=&quot;4.进阶(多人开发)&quot;&gt;&lt;/a&gt;4.进阶(多人开发)&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;摘自廖前辈的&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743858312764dca7ad6d0754f76aa562e3789478044000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回退版本&lt;br&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;&lt;br&gt;回退前前个版本&lt;br&gt;&lt;code&gt;git reset --hard HEAD^^&lt;/code&gt;&lt;br&gt;回退前n个版本&lt;br&gt;&lt;code&gt;git reset --hard HEAD~100&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt; 可以查看提交历史，以便确定要回退到哪个版本&lt;br&gt;&lt;code&gt;git reflog&lt;/code&gt; 查看命令历史，以便确定要回到未来的哪个版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git diff HEAD -- readme.txt&lt;/code&gt; 命令可以查看工作区和版本库里面最新版本的区别&lt;br&gt;&lt;code&gt;git checkout -- readme.txt&lt;/code&gt; 意思就是，把readme.txt文件在工作区的修改全部撤销&lt;br&gt;用命令&lt;code&gt;git reset HEAD file&lt;/code&gt; 可以把暂存区的修改撤销掉（unstage），重新放回工作区&lt;/p&gt;
&lt;p&gt;确实要从版本库中删除该文件，那就用命令&lt;code&gt;git rm&lt;/code&gt;删掉，并且&lt;code&gt;git commit&lt;/code&gt;&lt;br&gt;&lt;code&gt;git checkout&lt;/code&gt;其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;branch分支&lt;/a&gt;&lt;br&gt;查看分支：&lt;code&gt;git branch&lt;/code&gt;&lt;br&gt;创建分支：&lt;code&gt;git branch &amp;lt;name&amp;gt;&lt;/code&gt;&lt;br&gt;切换分支：&lt;code&gt;git checkout &amp;lt;name&amp;gt;&lt;/code&gt;&lt;br&gt;创建+切换分支：&lt;code&gt;git checkout -b &amp;lt;name&amp;gt;&lt;/code&gt;&lt;br&gt;合并某分支到当前分支：&lt;code&gt;git merge &amp;lt;name&amp;gt;&lt;/code&gt;&lt;br&gt;删除分支：&lt;code&gt;git branch -d &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;To-be-continued…&quot;&gt;&lt;a href=&quot;#To-be-continued…&quot; class=&quot;headerlink&quot; title=&quot;To be continued…&quot;&gt;&lt;/a&gt;To be continued…&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今天来记录一下自己学习git-amp-github的心得和体会&quot;&gt;&lt;a href=&quot;#今天来记录一下自己学习git-amp-github的心得和体会&quot; class=&quot;headerlink&quot; title=&quot;今天来记录一下自己学习git &amp;amp; github的心得
    
    </summary>
    
    
      <category term="git" scheme="https://miaojihui.github.io/tags/git/"/>
    
      <category term="github" scheme="https://miaojihui.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>slick-zoom-hammer</title>
    <link href="https://miaojihui.github.io/2016/08/27/slick-zoom-hammer/"/>
    <id>https://miaojihui.github.io/2016/08/27/slick-zoom-hammer/</id>
    <published>2016-08-27T08:13:44.000Z</published>
    <updated>2016-09-11T11:44:52.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;站在巨人们的肩膀上&quot;&gt;&lt;a href=&quot;#站在巨人们的肩膀上&quot; class=&quot;headerlink&quot; title=&quot;站在巨人们的肩膀上&quot;&gt;&lt;/a&gt;站在巨人们的肩膀上&lt;/h1&gt;&lt;p&gt;顾名思义，这是一个slick+zoom+hammer的gallery插件，因为在网上找不到现成满足主管需求的插件，于是花了蛮久时间去研究了这三个插件，然后组合到了一起。&lt;br&gt;当然现在只是初步捆绑起来，性能上还有很多的问题，比如移动端上的流畅度、手势处理hammer的优化，等待时间的加载动画、gif问题等，这些就留给以后有时间慢慢去优化吧。&lt;/p&gt;
&lt;p&gt;先贴效果图吧(图片暂时不会排版)：&lt;br&gt;&lt;img src=&quot;/imgs/slick1.png&quot; alt=&quot;Alt pc端&quot;&gt;&lt;br&gt;&lt;img alt=&quot;mobile&quot; src=&quot;/imgs/slick3.png&quot; style=&quot;max-width:300px;width:100%;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/zoom2.png&quot; style=&quot;max-width:300px;width:100%;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在就来介绍这个组合插件，一个个来介绍吧。 &lt;/p&gt;
&lt;h2 id=&quot;slick&quot;&gt;&lt;a href=&quot;#slick&quot; class=&quot;headerlink&quot; title=&quot;slick&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/kenwheeler/slick&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;slick&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;这个插件很不错，基本上做到了作者所声称的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the last carousel you’ll ever need&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能非常丰富，体积也不大，在50k以内，该项目的github地址上已经把详细的教程都写在上面。这里就贴下我项目中用到的写法：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;ready&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;string&quot;&gt;&quot;.slick-regular&quot;&lt;/span&gt;).slick(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        infinite: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slidesToShow: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slidesToScroll: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swipe: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        prevArrow: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nextArrow: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dots: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        asNavFor: &lt;span class=&quot;string&quot;&gt;&quot;.slick-thumbnail&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//关联别的slick&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         responsive: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            breakpoint: &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            settings: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              slidesToShow: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            breakpoint: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            settings: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              slidesToShow: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              dots: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              fade: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            breakpoint: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            settings: &lt;span class=&quot;string&quot;&gt;&quot;unslick&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// destroys slick&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;string&quot;&gt;&quot;.slick-thumbnail&quot;&lt;/span&gt;).slick(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        infinite: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slidesToShow: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        slidesToScroll: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verticalSwiping: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vertical: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        asNavFor: &lt;span class=&quot;string&quot;&gt;&quot;.slick-regular&quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//和上面的对应&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;具体的用法还可以到&lt;a href=&quot;http://kenwheeler.github.io/slick&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;查询。&lt;/p&gt;
&lt;h2 id=&quot;Zoom&quot;&gt;&lt;a href=&quot;#Zoom&quot; class=&quot;headerlink&quot; title=&quot;Zoom&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/gurde/ZOOM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zoom&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;这是我无意间发现的还不错的图片弹出放大插件，功能简单粗暴，js源码也比较易懂，后期可以借鉴其中的思路自己写一套适合自己用的插件。用法我直接上html了：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;gallery&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/1.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/1.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/2.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/2.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/3.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/3.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/4.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/4.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是gallery这个class是必须的，当然你也可以在zoom.js中改写。唯一有点麻烦的就是&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;之前需要用&lt;code&gt;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;包裹一遍。&lt;/p&gt;
&lt;h2 id=&quot;hammer&quot;&gt;&lt;a href=&quot;#hammer&quot; class=&quot;headerlink&quot; title=&quot;hammer&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/hammerjs/hammer.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hammer&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;这个插件就厉害了，移动端的全手势库。我也是靠这个功能在移动端实现放大缩小图片的。但是hammer的教程挺难懂的，可以说写得略随意了。&lt;br&gt;建议需要对着&lt;a href=&quot;http://hammerjs.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;的demo撸一遍。&lt;br&gt;我在这个项目中用到的方法也是从官网的某个demo中抄袭过来，然后改写了一下。&lt;/p&gt;
&lt;p&gt;在这里再次感谢：&lt;a href=&quot;https://github.com/kenwheeler/slick&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;slick&lt;/a&gt;、&lt;a href=&quot;https://github.com/gurde/ZOOM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zoom&lt;/a&gt;、&lt;a href=&quot;https://github.com/hammerjs/hammer.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hammer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后贴上项目地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MiaoJiHui/slickZoom-hammer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://miaojihui.github.io/slick-zoom-hammer/&quot;&gt;demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;站在巨人们的肩膀上&quot;&gt;&lt;a href=&quot;#站在巨人们的肩膀上&quot; class=&quot;headerlink&quot; title=&quot;站在巨人们的肩膀上&quot;&gt;&lt;/a&gt;站在巨人们的肩膀上&lt;/h1&gt;&lt;p&gt;顾名思义，这是一个slick+zoom+hammer的gallery插件，因为在网上
    
    </summary>
    
    
      <category term="slick" scheme="https://miaojihui.github.io/tags/slick/"/>
    
      <category term="Zoom" scheme="https://miaojihui.github.io/tags/Zoom/"/>
    
      <category term="hammer" scheme="https://miaojihui.github.io/tags/hammer/"/>
    
  </entry>
  
  <entry>
    <title>node.js</title>
    <link href="https://miaojihui.github.io/2016/08/14/node/"/>
    <id>https://miaojihui.github.io/2016/08/14/node/</id>
    <published>2016-08-14T15:15:14.000Z</published>
    <updated>2016-08-27T10:29:51.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;踏上node-js之旅&quot;&gt;&lt;a href=&quot;#踏上node-js之旅&quot; class=&quot;headerlink&quot; title=&quot;踏上node.js之旅&quot;&gt;&lt;/a&gt;踏上node.js之旅&lt;/h1&gt;&lt;h4 id=&quot;说来惭愧，一直没机会去学习这门热门技术。最近由于想写一个爬虫来爬点数据，在python和node-js中纠结了一阵，后来觉得作为FED-还是有必要学习下node。&quot;&gt;&lt;a href=&quot;#说来惭愧，一直没机会去学习这门热门技术。最近由于想写一个爬虫来爬点数据，在python和node-js中纠结了一阵，后来觉得作为FED-还是有必要学习下node。&quot; class=&quot;headerlink&quot; title=&quot;说来惭愧，一直没机会去学习这门热门技术。最近由于想写一个爬虫来爬点数据，在python和node.js中纠结了一阵，后来觉得作为FED,还是有必要学习下node。&quot;&gt;&lt;/a&gt;说来惭愧，一直没机会去学习这门热门技术。最近由于想写一个爬虫来爬点数据，在python和node.js中纠结了一阵，后来觉得作为FED,还是有必要学习下node。&lt;/h4&gt;&lt;p&gt;目前还正在&lt;a href=&quot;https://cnodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cnode.org&lt;/a&gt;社区积极学习中，深深感觉自己落后了太多啊。&lt;/p&gt;
&lt;p&gt;先贴一下我正在学习的网站吧，是cnode.org社区的创始人写的教学文档，真是行业良心！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alsotang/node-lessons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Node.js 包教不包会》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于脑子不够好使，目前刚看到lesson4，慢慢来吧。不过这四个lesson已经让我受益匪浅了，觉得node.js是一门值得去学习的技术。&lt;br&gt;等我把所有lessons都学完之后，我再来博客更新感受吧..&lt;/p&gt;
&lt;h2 id=&quot;To-be-continued…&quot;&gt;&lt;a href=&quot;#To-be-continued…&quot; class=&quot;headerlink&quot; title=&quot;To be continued…&quot;&gt;&lt;/a&gt;To be continued…&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;踏上node-js之旅&quot;&gt;&lt;a href=&quot;#踏上node-js之旅&quot; class=&quot;headerlink&quot; title=&quot;踏上node.js之旅&quot;&gt;&lt;/a&gt;踏上node.js之旅&lt;/h1&gt;&lt;h4 id=&quot;说来惭愧，一直没机会去学习这门热门技术。最近由于想写一个爬
    
    </summary>
    
    
      <category term="node" scheme="https://miaojihui.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Goal of 2016</title>
    <link href="https://miaojihui.github.io/2016/07/29/goal/"/>
    <id>https://miaojihui.github.io/2016/07/29/goal/</id>
    <published>2016-07-29T02:46:17.000Z</published>
    <updated>2016-09-11T11:44:42.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&quot;&gt;&lt;a href=&quot;#虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&quot; class=&quot;headerlink&quot; title=&quot;虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&quot;&gt;&lt;/a&gt;虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;坚持早睡早起，晚上11点睡觉 早上7点起床，上下浮动不超过一个小时，双休日照常。&lt;/li&gt;
&lt;li&gt;坚持锻炼，游泳、有氧运动，学习瑜伽。&lt;/li&gt;
&lt;li&gt;保持更博频率，至少每两周一次。&lt;/li&gt;
&lt;li&gt;年末的时候存点款，感恩家人。&lt;/li&gt;
&lt;li&gt;学做一道新菜，要求：美味。&lt;/li&gt;
&lt;li&gt;每天学英语，争取年末能跟老外进行简单日常的英文交流。&lt;/li&gt;
&lt;li&gt;每个月看一本书，技术/非技术均可，看完一本后上博客更新写下观后感。&lt;/li&gt;
&lt;li&gt;学习完node.js并学会爬虫，学习前端主流技术vue.js/webpack等。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&quot;&gt;&lt;a href=&quot;#虽然2016已经过去大半，但任何时候开始定目标都不算晚，只要行动起来。&quot; class=&quot;headerlink&quot; title=&quot;虽然2016已经过去大半，但任何时候开始定目
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bootstrap-tagsinput</title>
    <link href="https://miaojihui.github.io/2016/07/17/bootstrap-tagsinput/"/>
    <id>https://miaojihui.github.io/2016/07/17/bootstrap-tagsinput/</id>
    <published>2016-07-17T08:05:06.000Z</published>
    <updated>2016-09-11T11:44:48.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&quot;&gt;&lt;a href=&quot;#公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&quot; class=&quot;headerlink&quot; title=&quot;公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&quot;&gt;&lt;/a&gt;公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&lt;/h2&gt;&lt;p&gt;bootstrap-tagsinput 其实是分两步：一个是tagsinput 另一个是typeahead&lt;/p&gt;
&lt;p&gt;1.首先先下载bootstrap-tagsinput到本地，这是它的github地址：&lt;a href=&quot;https://github.com/bootstrap-tagsinput/bootstrap-tagsinput&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/bootstrap-tagsinput/bootstrap-tagsinput&lt;/a&gt;&lt;br&gt;目录结构如下：&lt;br&gt;&lt;img src=&quot;/imgs/tagsinput.png&quot; alt=&quot;Alt tagsinput&quot;&gt;&lt;br&gt;我没有全部引用这些文件，我就用到了:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bootstrap-tagsinput.css  —这是tag的样式&lt;/li&gt;
&lt;li&gt;bootstrap-tagsinput-typeahead.css  —这是typeahead的样式&lt;/li&gt;
&lt;li&gt;bootstrap-tagsinput.min.js &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.然后下载typeaheads.js,这是&lt;a href=&quot;https://github.com/twitter/typeahead.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;typeahead&lt;/a&gt;的github地址&lt;br&gt;目录结构如下：&lt;/p&gt;
&lt;p&gt;&lt;div style=&quot;text-align:left;&quot;&gt;&lt;img style=&quot;display:inline-block;&quot; src=&quot;/imgs/typeahead.png&quot;&gt;&lt;/div&gt;&lt;br&gt;这里只要用到typeahead-bundle.js就行了，它已经包括了其他的js库了&lt;/p&gt;
&lt;p&gt;3.把如上文件依次引入到html之后，接下来就是写input标签了&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tag_search&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-provide&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;typeahead&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Amsterdam,Washington&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4.然后是js了&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里的cache:false 可能会有让服务器压力增大的隐患&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; citynames = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bloodhound(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	datumTokenizer: Bloodhound.tokenizers.obj.whitespace(&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	queryTokenizer: Bloodhound.tokenizers.whitespace,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	prefetch: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	url: &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;:U(&quot;index/tags&quot;)&amp;#125;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	filter: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;list&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $.map(list, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cityname&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123; name: cityname &amp;#125;; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cache:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(citynames.prefetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#tag_search&#39;&lt;/span&gt;).tagsinput(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  typeaheadjs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;citynames&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    displayKey: &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    valueKey: &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source: citynames.ttAdapter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;{:U(“index/tags”)}这串url对应的是php代码如下：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   $m = M(&lt;span class=&quot;string&quot;&gt;&#39;article_tag&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//从数据表获取整列tag数据，默认就是数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   $aTags = $m-&amp;gt;getField(&lt;span class=&quot;string&quot;&gt;&#39;tagname&#39;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; json_encode($aTags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一开始我并没有加cache:false的时候，我发现就算我改了url中的json数据，还是无法及时加载。所以我就在控制台打印了&lt;code&gt;citynames.prefetch&lt;/code&gt;,如下图：&lt;br&gt;&lt;img class=&quot;pic-100&quot; src=&quot;/imgs/prefetch.png&quot;&gt;&lt;br&gt;上图是我改过cache之后的截图了，默认的是cache:true。我尝试改成了false，问题就暂时解决啦。&lt;br&gt;但是，这隐隐让我觉得当tags越来越多时，可能会对服务器造成一定压力，因为每次请求它都要去加载那串url得到json数据，不过我暂时也想不出其他方法，就只能先这样了。&lt;br&gt;等研究出别的更好的方法了我再来更新。&lt;br&gt;其实prefetch的意思应该是预加载，原来的url也是本地环境中的.json文件，所以它的本意应该是用来加载本地预定义的tag数据的。&lt;/p&gt;
&lt;p&gt;我看网上还有如下这种实现方式：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;).tagsinput(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  typeahead: &amp;#123;                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;query&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $.get(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;:(&quot;index/tags&quot;)&amp;#125;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是我怎么试都不行,等有时间了再研究下&lt;br&gt;Oops…能力有限，目前先这样..&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&quot;&gt;&lt;a href=&quot;#公司最近在做一个有关tagsinput的东西，折腾了我好久，特此记录下&quot; class=&quot;headerlink&quot; title=&quot;公司最近在做一个有关tagsinput的东西
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo＋github制作个人博客</title>
    <link href="https://miaojihui.github.io/2016/06/30/hexo/"/>
    <id>https://miaojihui.github.io/2016/06/30/hexo/</id>
    <published>2016-06-30T15:10:01.000Z</published>
    <updated>2016-09-11T11:54:04.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;已经拖了好久了，终于下定决心想把自己怎么使用hexo-github更新博客的过程记录下来&quot;&gt;&lt;a href=&quot;#已经拖了好久了，终于下定决心想把自己怎么使用hexo-github更新博客的过程记录下来&quot; class=&quot;headerlink&quot; title=&quot;已经拖了好久了，终于下定决心想把自己怎么使用hexo+github更新博客的过程记录下来&quot;&gt;&lt;/a&gt;已经拖了好久了，终于下定决心想把自己怎么使用hexo+github更新博客的过程记录下来&lt;/h2&gt;&lt;p&gt;首先你得了解如下技术和技能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm&lt;br&gt;–node package management 是node的包管理器，可以用npm命令安装各种互联网的资源如js库&lt;/li&gt;
&lt;li&gt;hexo&lt;br&gt;–这是一款用node.js开发的开源博客模板引擎，我就是用的它生成的这个博客，与之对应的还有jekyll等&lt;/li&gt;
&lt;li&gt;git&lt;br&gt;–这是由linux之父linus大神花两周时间开发出的开源分布式版本控制系统，小巧高效灵活&lt;/li&gt;
&lt;li&gt;markdown&lt;br&gt;–按我的理解就是一种文本输入方式，就是我现在更新博客的一种编辑方式，这是&lt;a href=&quot;http://wowubuntu.com/markdown/basic.html&quot; title=&quot;markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;github&lt;br&gt;–这是广大程序员的代码分享之地（全球最大同性交友平台），可以托管/分享自己的代码也可以fork他人的代码，还可以利用它的github page功能建一个简单的github博客等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;好了现在正式叙述下过程&quot;&gt;&lt;a href=&quot;#好了现在正式叙述下过程&quot; class=&quot;headerlink&quot; title=&quot;好了现在正式叙述下过程&quot;&gt;&lt;/a&gt;好了现在正式叙述下过程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 安装npm，在这之前必须安装node.js,去&lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载node并安装，安装完node会自动安装好npm, 可用&lt;code&gt;bash node -v&lt;/code&gt;和&lt;code&gt;npm -v&lt;/code&gt;查看是否正确安装&lt;/strong&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 直接用npm安装hexo，并初始化&lt;/strong&gt;&lt;br&gt;初始化好的目录结构如下：&lt;br&gt;&lt;img src=&quot;http://i2.buimg.com/567571/164515166ed00245.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-cli -g		// -g是指全局安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init myblog  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install		// 安装package.json里的js包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server		// 这里hexo已用browsersync实现了浏览器自动刷新，不必手刷&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时你可以打开&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;localhost:4000&lt;/a&gt;，查看本地hexo博客主页有没有初始化成功。&lt;br&gt;下图是hexo默认的博客主页：&lt;br&gt;&lt;img src=&quot;http://i2.buimg.com/567571/92e681f1d6b088df.jpg&quot; class=&quot;pic-100&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 更换hexo主题，美化博客&lt;/strong&gt;&lt;br&gt;去官网的&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;theme&lt;/a&gt;页面寻找你喜欢的主题，然后下载下来，根据该主题的操作说明一一安装需要的包。以我用的apollo主题为例，需要先下载该主题依赖的一些包:&lt;br&gt;&lt;code&gt;npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive&lt;/code&gt;然后再把该主题文件clone到themes文件夹下&lt;br&gt;同时修改 _config.yml 的 theme 配置项为 apollo。好了之后执行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果报错的话，一般是这个主题所需要的包你没有安装完全。如果没报错就执行如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候就可以继续打开&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;localhost:4000&lt;/a&gt;查看新主题有没有安装成功了。&lt;br&gt;我这博客使用的是&lt;a href=&quot;http://pinggod.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;apollo主题&lt;/a&gt;,比较喜欢简洁风格的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 配置github,建立关联&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt; github申请一个repository&lt;/strong&gt;&lt;br&gt;去个人的github页，create new repository，库的名字必须写{username}.github.io，这里的username就是你的github账号名。建好之后再激活一下github pages,这个得去repository的setting里设。此时成功之后，你就可以通过 &lt;a href=&quot;http://username.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://username.github.io&lt;/a&gt; 访问你的个人页了，当然这只是github给你提供的简单的展示页面，要想做成博客就必须用到hexo等这些静态博客引擎。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; github添加ssh key&lt;/strong&gt;&lt;br&gt;可以看&lt;a href=&quot;http://blog.csdn.net/binyao02123202/article/details/20130891&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个&lt;/a&gt;，具体也可百度。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 和本地hexo建立关联&lt;/strong&gt;&lt;br&gt;这一步是最主要的，就是用本地hexo代码代替github个人页中username.github.io中的代码。&lt;br&gt;再次找到_config.yml，修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repo: https://github.com/MiaoJiHui/mia&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ojihui.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有其他参数也要相应改掉，比如theme改成你当前用的主题名。&lt;br&gt;改好之后执行命令：&lt;code&gt;$ npm install hexo-deployer-git --save&lt;/code&gt;        //下载hexo下的git工具包&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; hexo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后再执行:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不报错的话，此时就已经部署成功了，你可以通过&lt;a href=&quot;https://miaojihui.github&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://miaojihui.github&lt;/a&gt;.io的方式访问你的个人博客啦，第一次成功的时候还是非常兴奋的！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;附赠些常用命令&lt;/p&gt;
&lt;p&gt;  hexo new “postName” #新建文章&lt;/p&gt;
&lt;p&gt;  hexo new page “pageName” #新建页面&lt;/p&gt;
&lt;p&gt;  hexo generate #生成静态页面至public目录&lt;/p&gt;
&lt;p&gt;  hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）&lt;/p&gt;
&lt;p&gt;  hexo deploy #将public目录部署到GitHub&lt;/p&gt;
&lt;p&gt;  hexo help # 查看帮助&lt;/p&gt;
&lt;p&gt;  hexo version #查看Hexo的版本&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;一般来说，我都是在本地blog文件夹下执行hexo server命令，然后再用markdown更新编写博客，可以实时看到效果。编辑好了之后就用hexo generate和hexo deploy命令生成并部署到github上。总之，熟悉了markdown语法后，更新博客来说还是蛮方便的。在此感谢markdown/hexo作者和github。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.jianshu.com/p/465830080ea9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/465830080ea9&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;已经拖了好久了，终于下定决心想把自己怎么使用hexo-github更新博客的过程记录下来&quot;&gt;&lt;a href=&quot;#已经拖了好久了，终于下定决心想把自己怎么使用hexo-github更新博客的过程记录下来&quot; class=&quot;headerlink&quot; title=&quot;已经拖了
    
    </summary>
    
    
      <category term="git" scheme="https://miaojihui.github.io/tags/git/"/>
    
      <category term="github" scheme="https://miaojihui.github.io/tags/github/"/>
    
      <category term="hexo" scheme="https://miaojihui.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
